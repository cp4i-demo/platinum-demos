{"componentChunkName":"component---src-pages-100-watson-aiops-observability-demo-preparation-mdx","path":"/100-watson-aiops-observability/demo-preparation/","result":{"pageContext":{"frontmatter":{"title":"Observability 100-level live demo","description":"Observability 100-level live demo","tabs":["Demo preparation","Demo script"]},"relativePagePath":"/100-watson-aiops-observability/demo-preparation.mdx","titleType":"page","MdxNode":{"id":"b06d0517-2499-5e3d-8a96-37fb63d455d6","children":[],"parent":"6b7d1813-bbc3-553e-ae01-bcaae2a1f0d6","internal":{"content":"---\ntitle: Observability 100-level live demo\ndescription: Observability 100-level live demo\ntabs: [ 'Demo preparation', 'Demo script']\n---\n\nexport const Title = () => (\n  <span>\n    Observability <br/> 100-level live demo\n  </span>\n);\n\n![banner](./images/AIOPS_Observability_100_Prep_GitHub_banner_7-30-21.jpg)\n\n| Preparation | |\n| :---         | :--- |\n| **Scenario overview** | This demo shows how IBM Instana helps quickly identify and resolve an incident in a microservices-based application. The application in this demo is called Stan’s Robot Shop, and it uses various technologies such as Java, Python, and MySQL. |\n| **Demo outline** | Introduction <br/> 1. Getting an incident alert <br/> 2. Inspect auto-correlated incident details <br/> 3. Debugging the incident by inspecting calls <br/> 4. Drill down with end-to-end traces <br/> 5. Confirm incident resolution was successful <br/> Summary |\n| **Before the demo** | **Environment setup** <br/> •\tLog into https://ibmdemo-instanaibm.instana.io. <br/> •\tSet the time period to show an active incident, as detailed below: <br/> <br/> 1.\tIn the upper right, click the button showing the timeframe. <br/> ![timeframe](./images/timeframe.png) <br/> 2.\tAt the bottom of the pop-up, set the timeframe so that it begins at 25 minutes past the hour and ends at 35 minutes past the hour. It doesn’t matter which hour you pick. Click **‘set time’**. <br/> Note: Pressing 'enter' doesn’t work. You'll need to actually click the button. <br/> This will ensure you see normal behavior and then a sudden change when the incident begins at 0:30. <br/> ![time_range](./images/time_range.png) <br/> 3.\tCheck that the summary tab for the robot shop (**Applications** -> **Robot Shop** -> **Summary**) looks like this (seeing drop in call volume and spikes in errors and latency). <br/> ![robot_shop_summary](./images/robot_shop_summary.png) <br/> 4.\tClick on **Events** on the sidebar menu and check that there are open incidents, including 'sudden increase in the number of erroneous calls' on the 'discount' service. <br/> ![open_incidents](./images/open_incidents.png) <br/> <br/> **Requisition instructions** <br/> Please see [below](#place1). |\n| **Key demo considerations** | The demo environment is set to automatically inject an error into the application once every hour. <br/> <br/> The cycle begins on the half-hour (so 9:30, 10:30, etc). You should see errors begin to show up a few minutes after this (around 32 or 33 minutes past the hour). <br/> <br/> The error will resolve itself and go back to a normal state after about 10 minutes. <br/> <br/> You can set the timeframe so that you can demo the active incident, even if your timing does not coincide with when the error cycle starts. See instructions above (under **Environment setup**). |\n| **How to get support** | Please direct any questions in preparation for the demo to the [**#Techdemos-Automation-Support**](https://ibm.enterprise.slack.com/app_redirect?channel=techdemos-automation-support) Slack channel. |\n\n***\n\n<span id=\"place1\"></span>\n\n## Requisition instructions\n\nTwo days before the demo, make sure you can access the environment: https://ibmdemo-instanaibm.instana.io.\n\nEmail contacts to request access:\n\n#### Sales:\n| Region | Name | Email |\n| --- | --- | --- |\n| Americas | Chris Marvin | camarvin@us.ibm.com |\n| EMEA | Thomas Taschner | thota@at.ibm.com |\n| AP | Mark Jones | marjones@au1.ibm.com |\n| Japan | Yasuhiro Tsutsumi | Yasuhiro.Tsutsumi@ibm.com |\n\n#### Tech sales:\n| Region | Name | Email |\n| --- | --- | --- |\n| Americas | Ganeshram Boodhoo | gbood@us.ibm.com |\n| EMEA | Alexandre Abi-Khaled | alexandre.abikhaled@nl.ibm.com |\n| AP | Kitman Cheung | cheungk@sg.ibm.com |\n| Japan | Tomonori Iwashina | TOMONORI@jp.ibm.com |\n\n#### Everybody else (IBMers that are not sales or tech sales):\n| Name | Email |\n| --- | --- |\n| Aaron Tobin | atobin@us.ibm.com |\n| Maria Elena Taglieri | maria_elena.taglieri@it.ibm.com |\n| Matthias Staub | matthias.staub@ch.ibm.com |\n\n#### Business partners:\nTBD\n\n#### Backup contacts:\nIf the person you contact initially is unavailable, contact the other person for your geo.\n\nExample: A seller in the Americas would contact Chris Marvin initially. If he’s unavailable, that seller would then contact the tech sales contact for Americas (Ganeshram Boodhoo).\n\nYou can also use the 'everybody else' contacts.\n\n#### Turnaround:\nThe turnaround time for requests to access the environment is two business days.\n\n***\n","type":"Mdx","contentDigest":"b1fdca065155a0a0b870c36970df93e4","owner":"gatsby-plugin-mdx","counter":545},"frontmatter":{"title":"Observability 100-level live demo","description":"Observability 100-level live demo","tabs":["Demo preparation","Demo script"]},"exports":{},"rawBody":"---\ntitle: Observability 100-level live demo\ndescription: Observability 100-level live demo\ntabs: [ 'Demo preparation', 'Demo script']\n---\n\nexport const Title = () => (\n  <span>\n    Observability <br/> 100-level live demo\n  </span>\n);\n\n![banner](./images/AIOPS_Observability_100_Prep_GitHub_banner_7-30-21.jpg)\n\n| Preparation | |\n| :---         | :--- |\n| **Scenario overview** | This demo shows how IBM Instana helps quickly identify and resolve an incident in a microservices-based application. The application in this demo is called Stan’s Robot Shop, and it uses various technologies such as Java, Python, and MySQL. |\n| **Demo outline** | Introduction <br/> 1. Getting an incident alert <br/> 2. Inspect auto-correlated incident details <br/> 3. Debugging the incident by inspecting calls <br/> 4. Drill down with end-to-end traces <br/> 5. Confirm incident resolution was successful <br/> Summary |\n| **Before the demo** | **Environment setup** <br/> •\tLog into https://ibmdemo-instanaibm.instana.io. <br/> •\tSet the time period to show an active incident, as detailed below: <br/> <br/> 1.\tIn the upper right, click the button showing the timeframe. <br/> ![timeframe](./images/timeframe.png) <br/> 2.\tAt the bottom of the pop-up, set the timeframe so that it begins at 25 minutes past the hour and ends at 35 minutes past the hour. It doesn’t matter which hour you pick. Click **‘set time’**. <br/> Note: Pressing 'enter' doesn’t work. You'll need to actually click the button. <br/> This will ensure you see normal behavior and then a sudden change when the incident begins at 0:30. <br/> ![time_range](./images/time_range.png) <br/> 3.\tCheck that the summary tab for the robot shop (**Applications** -> **Robot Shop** -> **Summary**) looks like this (seeing drop in call volume and spikes in errors and latency). <br/> ![robot_shop_summary](./images/robot_shop_summary.png) <br/> 4.\tClick on **Events** on the sidebar menu and check that there are open incidents, including 'sudden increase in the number of erroneous calls' on the 'discount' service. <br/> ![open_incidents](./images/open_incidents.png) <br/> <br/> **Requisition instructions** <br/> Please see [below](#place1). |\n| **Key demo considerations** | The demo environment is set to automatically inject an error into the application once every hour. <br/> <br/> The cycle begins on the half-hour (so 9:30, 10:30, etc). You should see errors begin to show up a few minutes after this (around 32 or 33 minutes past the hour). <br/> <br/> The error will resolve itself and go back to a normal state after about 10 minutes. <br/> <br/> You can set the timeframe so that you can demo the active incident, even if your timing does not coincide with when the error cycle starts. See instructions above (under **Environment setup**). |\n| **How to get support** | Please direct any questions in preparation for the demo to the [**#Techdemos-Automation-Support**](https://ibm.enterprise.slack.com/app_redirect?channel=techdemos-automation-support) Slack channel. |\n\n***\n\n<span id=\"place1\"></span>\n\n## Requisition instructions\n\nTwo days before the demo, make sure you can access the environment: https://ibmdemo-instanaibm.instana.io.\n\nEmail contacts to request access:\n\n#### Sales:\n| Region | Name | Email |\n| --- | --- | --- |\n| Americas | Chris Marvin | camarvin@us.ibm.com |\n| EMEA | Thomas Taschner | thota@at.ibm.com |\n| AP | Mark Jones | marjones@au1.ibm.com |\n| Japan | Yasuhiro Tsutsumi | Yasuhiro.Tsutsumi@ibm.com |\n\n#### Tech sales:\n| Region | Name | Email |\n| --- | --- | --- |\n| Americas | Ganeshram Boodhoo | gbood@us.ibm.com |\n| EMEA | Alexandre Abi-Khaled | alexandre.abikhaled@nl.ibm.com |\n| AP | Kitman Cheung | cheungk@sg.ibm.com |\n| Japan | Tomonori Iwashina | TOMONORI@jp.ibm.com |\n\n#### Everybody else (IBMers that are not sales or tech sales):\n| Name | Email |\n| --- | --- |\n| Aaron Tobin | atobin@us.ibm.com |\n| Maria Elena Taglieri | maria_elena.taglieri@it.ibm.com |\n| Matthias Staub | matthias.staub@ch.ibm.com |\n\n#### Business partners:\nTBD\n\n#### Backup contacts:\nIf the person you contact initially is unavailable, contact the other person for your geo.\n\nExample: A seller in the Americas would contact Chris Marvin initially. If he’s unavailable, that seller would then contact the tech sales contact for Americas (Ganeshram Boodhoo).\n\nYou can also use the 'everybody else' contacts.\n\n#### Turnaround:\nThe turnaround time for requests to access the environment is two business days.\n\n***\n","fileAbsolutePath":"/home/runner/work/platinum-demos/platinum-demos/src/pages/100-watson-aiops-observability/demo-preparation.mdx"}}},"staticQueryHashes":["1364590287","137577622","137577622","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550"]}