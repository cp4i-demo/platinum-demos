{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/LastModifiedDate.js","webpack:///./node_modules/gatsby-theme-carbon/src/templates/Default.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/LastModifiedDate/last-modified-date.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./src/pages/integration/integration-300-deliver.mdx"],"names":["PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","props","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","aria-label","list","React","Component","LastModifiedDate","date","lastModified","Date","toLocaleDateString","day","year","month","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","NextPrevious","Utils","module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---src-pages-integration-integration-300-deliver-mdx-38b14f1ff59816b800bc.js","sourcesContent":["import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { title, tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav aria-label={title}>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import LastModifiedDate from './LastModifiedDate';\n\nexport default LastModifiedDate;\n","import React from 'react';\nimport { Row, Column } from '../Grid';\nimport styles from './last-modified-date.module.scss';\n\nconst LastModifiedDate = ({ date }) => {\n  const options = {\n    day: '2-digit',\n    year: 'numeric',\n    month: 'long',\n  };\n\n  const lastModified = new Date(date);\n\n  return date ? (\n    <Row className={styles.row}>\n      <Column>\n        <div className={styles.text}>\n          Page last updated: {lastModified.toLocaleDateString('en-GB', options)}\n          {/* // https://www-03preprod.ibm.com/support/knowledgecenter/ibm_style/dates-and-times.html */}\n        </div>\n      </Column>\n    </Row>\n  ) : null;\n};\nexport default LastModifiedDate;\n","import React from 'react';\nimport slugify from 'slugify';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Utils from '../components/Utils';\nimport Layout from '../components/Layout';\nimport PageHeader from '../components/PageHeader';\nimport EditLink from '../components/EditLink';\nimport NextPrevious from '../components/NextPrevious';\nimport PageTabs from '../components/PageTabs';\nimport Main from '../components/Main';\nimport useMetadata from '../util/hooks/useMetadata';\nimport LastModifiedDate from '../components/LastModifiedDate';\n\nconst Default = ({ pageContext, children, location, Title }) => {\n  const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n  const {\n    tabs,\n    title,\n    theme: frontmatterTheme,\n    description,\n    keywords,\n    date,\n  } = frontmatter;\n\n  const { interiorTheme } = useMetadata();\n\n  // get the path prefix if it exists\n  const {\n    site: { pathPrefix },\n  } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n  // let gatsby handle prefixing\n  const slug = pathPrefix\n    ? location.pathname.replace(pathPrefix, '')\n    : location.pathname;\n\n  const getCurrentTab = () => {\n    if (!tabs) return '';\n    return (\n      slug.split('/').filter(Boolean).slice(-1)[0] ||\n      slugify(tabs[0], { lower: true })\n    );\n  };\n\n  const currentTab = getCurrentTab();\n\n  const theme = frontmatterTheme || interiorTheme;\n\n  return (\n    <Layout\n      tabs={tabs}\n      homepage={false}\n      theme={theme}\n      pageTitle={title}\n      pageDescription={description}\n      pageKeywords={keywords}\n      titleType={titleType}>\n      <PageHeader\n        title={Title ? <Title /> : title}\n        label=\"label\"\n        tabs={tabs}\n        theme={theme}\n      />\n      {tabs && (\n        <PageTabs\n          title={title}\n          slug={slug}\n          tabs={tabs}\n          currentTab={currentTab}\n        />\n      )}\n      <Main padded>\n        {children}\n        <EditLink relativePagePath={relativePagePath} />\n        <LastModifiedDate date={date} />\n      </Main>\n      <NextPrevious\n        pageContext={pageContext}\n        location={location}\n        slug={slug}\n        tabs={tabs}\n        currentTab={currentTab}\n      />\n      <Utils />\n    </Layout>\n  );\n};\n\nexport default Default;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"last-modified-date-module--bx--text-truncate--end--123zi\",\"bxTextTruncateFront\":\"last-modified-date-module--bx--text-truncate--front--3xeKz\",\"text\":\"last-modified-date-module--text--24m-4\",\"row\":\"last-modified-date-module--row--2BquN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/platinum-demos/platinum-demos/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h2>{`Demo Script`}</h2>\n    <h3>{`Introduction`}</h3>\n    <p>{`Automating customer interactions can provide the difference between a satisfied customer who wants to do more business with you or a disappointed customer who is looking for an alternative option. In addition, it can remove manual steps, data entry into multiple different applications, and potential errors and delays – all of which are additional costs to your business. This demo automates a series of steps to: obtain and validate input information from a customer with a concern, open a case in Salesforce, attach the incoming information to the case, analyze the tone of the situation, and respond to the customer with the case number and expected date for resolution.`}</p>\n    <p>{`To automate this customer interaction, we will use both APIs and integrations to back-end applications. The demo scenario is related to a car repair, but this is just an example. The same techniques are applicable to your environment in support of your customers.`}</p>\n    <p>{`In the demo we will execute the following steps:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Access the Cloud Pak for Integration environment and explore the capabilities`}</li>\n      <li parentName=\"ul\">{`Import and review the automated customer interactions integration flow`}</li>\n      <li parentName=\"ul\">{`Test the flow`}</li>\n      <li parentName=\"ul\">{`Deploy the flow into the Cloud Pak runtime environment`}</li>\n      <li parentName=\"ul\">{`Manage access to the flow as an API and set up the security and rate limits`}</li>\n      <li parentName=\"ul\">{`Demonstrate how a developer can use the API Portal to perform self-service consumption of the API`}</li>\n    </ul>\n    <p>{`Let’s get started!`}</p>\n    <span id=\"place1\"></span>\n    <summary>1 - Accessing the Environment</summary>\n\t\n#### 1.1 - Logging into Cloud Pak for Integration\n    <p>{`Open CP4I and click `}<strong parentName=\"p\">{`IBM provided credentials (admin only)`}</strong>{` and `}<strong parentName=\"p\">{`Log in`}</strong>{` with your admin user and password.`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`As businesses execute a digital transformation, every organization seeks to move faster than before. But going fast without the right approach, guided by real-world operational data, has caused 70% of digital transformations to fail. A new approach with automation and continuous improvement fed by AI algorithms is required. IBM Cloud Pak for Integration is a hybrid integration solution that provides an automated and closed-loop lifecycle across multiple styles of enterprise integration. With IBM Cloud Pak for Integration, companies can speed integration development, reduce costs and maintain enhanced security, governance and availability. Let’s see IBM Cloud Pak for Integration in action. Here I have a cloud version of the product on IBM Cloud. Let me log in here.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/automation-tech-demos-screen-github.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-login1.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-login2.png\",\n        \"alt\": \"10\"\n      }}></img></p>\n    <h4>{`1.2 - Viewing the CP4I home screen`}</h4>\n    <p>{`Show the Home Page and click on Integration Capabilities.`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`Welcome to IBM Cloud Pak for Integration! We’re now at the home screen showing all the capabilities of the pak, brought together in one place. Specialized integration capabilities —for API management, application integration, messaging and more —are built on top of powerful automation services. Let’s see the Integration Capabilities available in this Cloud Pak for Integration.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-home.png\",\n        \"alt\": \"10\"\n      }}></img></p>\n    <h4>{`1.3 - Viewing Integration capabilities`}</h4>\n    <p>{`Show the Integration Capabilities page and open the Designer (ace-designer-demo).`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`As you can see, through a single interface you are able to access all the integration capabilities your team needs. Including API Management, Application Integration, Enterprise Messaging, Events, and High-Speed Transfer. In this demo to automate customer interactions with our company we will use App Connect for Application Integration, API Connect for API Management, and the Asset Repository as our centralized hub for allowing our teams to work together with Integration assets. Let’s open our App Connect Designer.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-integration.png\",\n        \"alt\": \"10\"\n      }}></img></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#place1\"\n      }}>{`Go to Top`}</a></p>\n    <summary>2 - Importing the Flow</summary>\n    <h4>{`2.1 - Creating from an asset`}</h4>\n    <p>{`Click Create from an Asset.`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`Here we are in the designer tooling. This is where we can create all our API integration flows and manage our connectivity to our services and endpoints. As we begin, there is nothing here yet, so let’s build some integration logic. Let’s see how simple to create our flow from the Asset Repository.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-createfromasset.png\",\n        \"alt\": \"10\"\n      }}></img>{` `}</p>\n    <h4>{`2.2 - Selecting an Asset`}</h4>\n    <p>{`Click on the `}<strong parentName=\"p\">{`+`}</strong>{` sign to the right on the `}<strong parentName=\"p\">{`Car Insurance Cognitive API Lab Short V2`}</strong>{`.`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`We have a flow to use already stored in the Asset Repository, let’s use it to simplify our demonstration.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-select-asset.png\",\n        \"alt\": \"10\"\n      }}></img></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#place1\"\n      }}>{`Go to Top`}</a></p>\n    <summary>3 - Reviewing the Flow</summary>\n    <h4>{`3.1 - Reviewing Properties`}</h4>\n    <p>{`Show the `}<strong parentName=\"p\">{`Properties view`}</strong>{` and click on `}<strong parentName=\"p\">{`Operations`}</strong>{`.`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`The Designer builds your API for you – you don’t need to worry about OpenAPI specs or Swagger editors – it’s all built in. These are the fields we are going to use for our API. Note that we tell our API which field is the key – in our case, CaseReference.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-review-props.png\",\n        \"alt\": \"10\"\n      }}></img>{` `}</p>\n    <h4>{`3.2 - Reviewing Operations`}</h4>\n    <p>{`Show the `}<strong parentName=\"p\">{`Operations view`}</strong>{` and click on `}<strong parentName=\"p\">{`Edit flow`}</strong>{`.`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`In the Operations view are the actions that the API exposes along with the data. In this demo, we’re going to build just one operation – “Create Car Repair Claim”. We can add more later if we wish. Let’s check the flow logic.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-review-flow.png\",\n        \"alt\": \"10\"\n      }}></img></p>\n    <h4>{`3.3 - Reviewing the flow`}</h4>\n    <p>{`Initially `}<strong parentName=\"p\">{`close`}</strong>{` the Request dialog. Explain the Flow and Scroll through all of the connectors in the flow. After that, open the `}<strong parentName=\"p\">{`Request`}</strong>{` again, by clicking the first step of the flow.`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`Here we have our demo flow. In the designer flow editor, we can edit and change our flow. We are a Car Repair company: We take in vehicles with problems and repair them. We want to create an API which enables customers to send us photos of their cars along with descriptions of what needs to be done. With this information, we will create a case in Salesforce and use Watson to analyze if the customer is angry or upset. Let’s explore our flow in detail.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-review-flow.png\",\n        \"alt\": \"10\"\n      }}></img></p>\n    <h4>{`3.4 - Reviewing a Request`}</h4>\n    <p>{`Show the `}<em parentName=\"p\">{`Request`}</em>{` dialog (1). Click to `}<em parentName=\"p\">{`open`}</em>{` the `}<strong parentName=\"p\">{`if`}</strong>{` step (2).`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`Our flow starts by receiving the customer’s car repair request with photo via an API. Designer automatically creates an API “Request” and “Response” for your API flow.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-review-request.png\",\n        \"alt\": \"10\"\n      }}></img></p>\n    <h4>{`3.5 - Checking the Photo`}</h4>\n    <p>{`Explore the `}<em parentName=\"p\">{`if`}</em>{` step (1) and click on `}<strong parentName=\"p\">{`Salesforce Connector - Retrieve contacts`}</strong>{` (2). `}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`Second, we validate the photo. Here, we have a simple if statement, that check if the PhotoOfCar is empty. If it is not empty, we move forward to retrieve contacts by connecting to Salesforce.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-review-if.png\",\n        \"alt\": \"10\"\n      }}></img></p>\n    <h4>{`3.6 - Retrieving contacts`}</h4>\n    <p>{`Explore the `}<em parentName=\"p\">{`Salesforce Connector - Retrieve contacts`}</em>{` (1). Change the `}<em parentName=\"p\">{`Contact name`}</em>{` to `}<strong parentName=\"p\">{`Andrew Young`}</strong>{` (2). And `}<strong parentName=\"p\">{`test the connection`}</strong>{` (3). Change back the `}<em parentName=\"p\">{`Contact Full name`}</em>{` to `}<strong parentName=\"p\">{`Andy Young`}</strong>{` (4) and `}<strong parentName=\"p\">{`test again`}</strong>{` (5). Open `}<strong parentName=\"p\">{`View details`}</strong>{` (6). On the `}<em parentName=\"p\">{`Output`}</em>{`, open the `}<strong parentName=\"p\">{`Contact1`}</strong>{` object (7). `}<strong parentName=\"p\">{`Close`}</strong>{` all the dialog tabs. Click on the `}<strong parentName=\"p\">{`Salesforce – Create case node`}</strong>{` (8).`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`Third, we use a connector to create a case in Salesforce with the data from the API. This Case is where we store the details and progress of our repair. We are using a hard-coded contact name: ‘Andy Young’. He’s the contact for the insurance company that sends customers. Salesforce Developer Accounts have a prepopulated set of data that you can use to test. ‘Andy Young’ is one of those prepopulated contacts. Let’s test our connection with Salesforce. Let me change the contact to Andrew Young, and test the connection. The test shows that we don’t have an Andrew Young. Let’s change it back to Andy Young and test again. Now we received a successful response. This proves that our connection is working. Let’s check the details. Here we can see the output returned from SalesForce, including the Contact ID.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-contacts1.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-contacts2.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-contacts3.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-contacts4.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-contacts5.png\",\n        \"alt\": \"10\"\n      }}></img></p>\n    <h4>{`3.7 - Creating a case`}</h4>\n    <p>{`Explore the `}<em parentName=\"p\">{`Salesforce – Create case node`}</em>{`. `}<strong parentName=\"p\">{`Close`}</strong>{` the Salesforce connector dialog. Open the `}<strong parentName=\"p\">{`Salesforce - Create Attachment node`}</strong>{`.`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong>{`<`}</p>\n    <p>{`Now we have the ID that we need, let’s create our Salesforce case. Note that we just re-use the same Salesforce connector but with a different operation and data. Here we can see that our contact ID comes from the previous ‘retrieve contact’ Salesforce Call. The Name and email come from the API Request. The connector ‘knows’ that fields like ‘Case Type’ have a limited number of values in Salesforce – so it automatically converts them into pull-down lists of values you can choose.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-review-salesforce-createcase.png\",\n        \"alt\": \"10\"\n      }}></img>{`\t`}</p>\n    <h4>{`3.8 - Creating an attachment`}</h4>\n    <p>{`Explore the `}<em parentName=\"p\">{`Salesforce – Create Attachment node`}</em>{` (1). `}<strong parentName=\"p\">{`Close`}</strong>{` the Salesforce connector dialog. Open the `}<strong parentName=\"p\">{`IBM Watson Tone Analyzer node`}</strong>{` (2).`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`To add a photograph, we need to create a salesforce attachment – that’s easy, just use the connector again. Note that we use the Case ID that is a returned value from the ‘Create Case’ connector call – it’s been kept in the flow automatically. We send the PhotoOfCar as a base64 string and we tell Salesforce that the content Type is image/jpeg. Moving forward to the next step we want to understand the tone of the request. Is the customer angry? We will use the IBM Watson Tone Analyzer node to understand the situation better.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-review-attachment.png\",\n        \"alt\": \"10\"\n      }}></img></p>\n    <h4>{`3.9 - Analyzing the description`}</h4>\n    <p>{`Explore the `}<em parentName=\"p\">{`Watson Tone Analyzer connector`}</em>{` (1). `}<strong parentName=\"p\">{`Close`}</strong>{` the Tone Analyzer connector dialog. Open the `}<strong parentName=\"p\">{`Salesforce - Create case comment`}</strong>{` (2).`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`Here, the Watson Tone Analyzer service analyzes the description shared by the customer, to identify if the customer is angry or upset, that demands further action or the need to treat them more carefully.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-review-analyzer.png\",\n        \"alt\": \"10\"\n      }}></img></p>\n    <h4>{`3.10 - Creating a case comment`}</h4>\n    <p>{`Explore the `}<em parentName=\"p\">{`Salesforce – Create case comment node`}</em>{` (1). `}<strong parentName=\"p\">{`Close`}</strong>{` the Salesforce connector dialog. Open the `}<strong parentName=\"p\">{`Response`}</strong>{`. (2)<`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`Then we’ll add a comment to the case with the Salesforce connector and supply the tone name returned from Watson into the body of the comment.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-review-comment.png\",\n        \"alt\": \"10\"\n      }}></img></p>\n    <h4>{`3.11 - Exploring the response`}</h4>\n    <p>{`Explore the `}<em parentName=\"p\">{`Response`}</em>{` dialog (1). Click `}<strong parentName=\"p\">{`Done`}</strong>{` (2). `}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`Here, we have the response that we submit back to the customer after the API call. This response includes their Salesforce case reference for future enquiries and also an estimate of how long it will take to repair and how much it will cost. Great. we’ve built the flow, let’s start it!`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-review-response.png\",\n        \"alt\": \"10\"\n      }}></img></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#place1\"\n      }}>{`Go to Top`}</a></p>\n    <summary>4 - Testing the Flow</summary> \n \n#### 4.1 - Starting the Flow\n \nClick **Start API** on the three dot menu at the top right.\n \n**Narration**\n    <p>{`Now we’ve looked at the integration flow, let’s start it up. Great! Now our flow is running, we need to test it.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-start-flow.png\",\n        \"alt\": \"10\"\n      }}></img>{` `}</p>\n    <h4>{`4.2 - Setting Environment Variables`}</h4>\n    <p>{`Open the `}<strong parentName=\"p\">{`Test`}</strong>{` tab (1). Copy the `}<strong parentName=\"p\">{`Endpoint URL`}</strong>{` (2). Open `}<strong parentName=\"p\">{`POST /CarRepairClaim`}</strong>{` (3). Open `}<strong parentName=\"p\">{`Try it`}</strong>{` (4). Copy the `}<strong parentName=\"p\">{`Username`}</strong>{` (5) and `}<strong parentName=\"p\">{`Password`}</strong>{` (6). In your script folder, on `}<em parentName=\"p\">{`terminal`}</em>{` window, `}<em parentName=\"p\">{`edit`}</em>{` the `}<strong parentName=\"p\">{`00-variables`}</strong>{` file (e.g.: vi 00-variables) and update the `}<strong parentName=\"p\">{`BASEPATH`}</strong>{` (7), `}<strong parentName=\"p\">{`USERNAME`}</strong>{` (8) and `}<strong parentName=\"p\">{`PASSWORD`}</strong>{` (9). Execute source `}<strong parentName=\"p\">{`exportVariables.sh`}</strong>{` (10) `}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`Now we’ve built our API, we need to test it. APIs can be tested in various ways. During this demo, we will do 3 different tests, one in the designer tool - now, another when our API is deployed to the Cloud Pak App Connect Runtime. And the last test, will be calling thru a Gateway. For simplicity and speed, as we’re using base64 pictures, we will use simple curl scripts so that we can call the APIs from the command line. Before we execute the script to call our API, we need to configure our script to point to our environment. To get the credentials for the designer, we go to the ‘Manage’ tab in designer. Now, let’s change our variable files to use these credentials. Great, let’s export now these variables.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-variables0.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-variables1.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-variables2.png\",\n        \"alt\": \"10\"\n      }}></img>{` `}</p>\n    <h4>{`4.3 - Running the test`}</h4>\n    <p>{`Edit the `}<strong parentName=\"p\">{`demotestcar.sh`}</strong>{` script (1). Explore and close the file. Execute `}<strong parentName=\"p\">{`./demotestcar.sh`}</strong>{` (2).`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`Now, it is time to run the script. Let’s check the script. Here we can see that we have a simple curl command that call our API, passing the user and password. And our data request, is JSON with all the information about the case, including a picture with a Subaru SUV. It is ready. Let’s run this script. Great, we received the expected response with the case information.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-car-running1.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-car-running2.png\",\n        \"alt\": \"10\"\n      }}></img></p>\n    <h4>{`4.4 - Checking Salesforce`}</h4>\n    <p>{`Open the `}<strong parentName=\"p\">{`Salesforce Dev Account`}</strong>{` site (1). On the `}<em parentName=\"p\">{`App Launcher`}</em>{` menu, search for cases (2). Open the `}<strong parentName=\"p\">{`Cases`}</strong>{` page (3). On `}<em parentName=\"p\">{`Cases`}</em>{` view, open the latest `}<strong parentName=\"p\">{`Car Breakdown case`}</strong>{` (4). Explore all fields, including picture and Watson analysis (5).`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`Let’s see our Salesforce system, to check if we have a new case. Let’s open the Cases page. And in the Recently Viewed, we can check all open cases. Here we have our case with all the information, including the picture, and the Watson tone analysis. With this information, our Customer Relationship team can work to support our customer.`}<br /></p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-salesforce-check1.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-salesforce-check2.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-salesforce-check3.png\",\n        \"alt\": \"10\"\n      }}></img></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#place1\"\n      }}>{`Go to Top`}</a></p>\n    <summary>5 - Deploying the Flow</summary>\n  \n#### 5.1 - Exporting the BAR File\n    <p>{`Into the `}<em parentName=\"p\">{`Designer Dashboard`}</em>{` (1), click the `}<strong parentName=\"p\">{`menu`}</strong>{` (2) and click `}<strong parentName=\"p\">{`Export`}</strong>{` (3). Select `}<strong parentName=\"p\">{`Runtime flow asset (BAR)`}</strong>{` (4) and click `}<strong parentName=\"p\">{`Export`}</strong>{` (5).`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`To deploy the flow to an integration server, you must export it as a BAR file. All the configuration settings, other than the connection credentials for your accounts, are preserved in the exported archive. Let’s export an executable BAR file. From the dashboard, locate the flow, open its menu, and then click Export. When you export a flow, you can choose to export its configuration as a YAML or BAR file, or as an OpenAPI document. In our case, we export as a BAR File.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-export-bar1.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-export-bar2.png\",\n        \"alt\": \"10\"\n      }}></img>{` `}</p>\n    <h4>{`5.2 - Importing the BAR File`}</h4>\n    <p>{`Open the `}<strong parentName=\"p\">{`Main Menu`}</strong>{` (1), and click `}<strong parentName=\"p\">{`Run > Integrations`}</strong>{` (2). Click `}<strong parentName=\"p\">{`Create a server`}</strong>{` (3). Select `}<strong parentName=\"p\">{`Quick start designer integration`}</strong>{` (4) and click `}<strong parentName=\"p\">{`Next`}</strong>{` (5). *`}<strong parentName=\"p\">{`*Upload the BAR`}</strong>{` file (6) and click `}<strong parentName=\"p\">{`Next`}</strong>{` (7). Select `}<strong parentName=\"p\">{`ace-designerdemo-designer-acc`}</strong>{` (8) and click `}<strong parentName=\"p\">{`Next`}</strong>{` (9). Enter a `}<em parentName=\"p\">{`name`}</em>{` for our integration server (10). Set `}<strong parentName=\"p\">{`Enable Operations Dashboard tracing`}</strong>{` to On (11). Enter `}<strong parentName=\"p\">{`cp4i`}</strong>{` as *Operations Dashboard namespace (12). Click `}<strong parentName=\"p\">{`Create`}</strong>{` (13)`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`Now, let’s open the App Connect Dashboard and create a new server. We need to create an integration server to run our integration. An integration server is a Kubernetes pod which has the containers needed to run our BAR file. We need to select the kind of tooling we used to build the integration. We used the Designer. So, we just need to upload the BAR file that we exported from designer. And here we choose which configurations we want. Here we enter the information that we want for our Integration server. Great, let’s create it!`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-import-bar1.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-import-bar2.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-import-bar3.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-import-bar4.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-import-bar5.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong><br />{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-import-bar6.png\",\n        \"alt\": \"10\"\n      }}></img>{` `}</p>\n    <h4>{`5.3 - Verifying the Server`}</h4>\n    <p>{`Click on our `}<strong parentName=\"p\">{`Integration Server`}</strong>{` (1). Open our `}<strong parentName=\"p\">{`API Flow`}</strong>{` (2). Explore the API details (3). `}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`Now we have our new Integration server. We need to wait some time for the pods to start. At this point, the integration is running on the Cloud Pak. Opening the server, we can see our API Flow. And click again, we’ll drill down further and see our API details. We can see the REST Operation, the base URL, and we can even download the OpenAPI document.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-verify-server1.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-verify-server2.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-verify-server3.png\",\n        \"alt\": \"10\"\n      }}></img>{`  `}</p>\n    <h4>{`5.4 - Testing the Flow on the Runtime`}</h4>\n    <p>{`Copy the `}<strong parentName=\"p\">{`Endpoint`}</strong>{` (1). In your script folder, on `}<em parentName=\"p\">{`terminal`}</em>{` window, `}<em parentName=\"p\">{`edit`}</em>{` the `}<strong parentName=\"p\">{`00-variables`}</strong>{` file and update the `}<strong parentName=\"p\">{`BASEPATH`}</strong>{` (2). `}<em parentName=\"p\">{`NOTE:remove the ”/” from the end of the endpoint.`}</em>{` Execute source `}<strong parentName=\"p\">{`exportVariables.sh`}</strong>{` (3). Execute `}<strong parentName=\"p\">{`./demotestcar.sh`}</strong>{` (4). Check the `}<strong parentName=\"p\">{`new case`}</strong>{` in `}<em parentName=\"p\">{`Salesforce`}</em>{` (5).`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`We’ll use the same scripts we used to test designer – we’ll just change the variables to point to the CP4I runtime. In the Server, we can get the runtime information. Let’s update our variables file and export them again. Now, we just need to run our script again with the same request data. Great, we can check the Salesforce cases page, and voilá here we have our new case created by calling the API in the Integration Runtime. `}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-testing-runtime1.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-testing-runtime2.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-testing-runtime3.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-testing-runtime4.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-testing-runtime5.png\",\n        \"alt\": \"10\"\n      }}></img>{` `}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#place1\"\n      }}>{`Go to Top`}</a></p>\n    <summary>6 - Managing an API</summary>\n \n#### 6.1 - Downloading OpenAPI Document\n\t\nClick **Download OpenAPI Document** link (1). Open your YAML file with any editor and manually add **x-ibm-configuration: gateway: datapower-api-gateway** (2).\n\t\n**Narration**\n    <p>{`We’ve created an application integration flow and successfully called it via a REST API call! Now, to make it accessible to the rest of the world, it’s important to add security around it. Let’s export our API to API Connect by downloading the OpenAPI Document.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-download-openapi.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-download-openapi2.png\",\n        \"alt\": \"10\"\n      }}></img>{` `}</p>\n    <h4>{`6.2 - Developing an API`}</h4>\n    <p>{`Open the `}<strong parentName=\"p\">{`Menu`}</strong>{` (1) and on `}<strong parentName=\"p\">{`Run`}</strong>{` (2) section, select `}<strong parentName=\"p\">{`APIs`}</strong>{` (3). If necessary, select the `}<strong parentName=\"p\">{`ademo`}</strong>{` instance (4). In the `}<em parentName=\"p\">{`API Connect`}</em>{` page, click `}<strong parentName=\"p\">{`Common Services user registry`}</strong>{` (5). Click `}<strong parentName=\"p\">{`Develop APIs and Products`}</strong>{` (6). Click `}<strong parentName=\"p\">{`Add`}</strong>{`, then choose `}<strong parentName=\"p\">{`API (from REST, GraphQL or SOAP)`}</strong>{` from the drop-down menu (7). Choose `}<strong parentName=\"p\">{`From an existing OpenAPI service`}</strong>{` (8) and click `}<strong parentName=\"p\">{`Next`}</strong>{` (9). Upload our `}<strong parentName=\"p\">{`Car_Insurance..`}</strong>{` YAML file (10) and click `}<strong parentName=\"p\">{`Next`}</strong>{` (11). Confirm the Info about API and click `}<strong parentName=\"p\">{`Next`}</strong>{` (12). Keep the security settings and click `}<strong parentName=\"p\">{`Next`}</strong>{` (13).`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`Now, let’s open our API Manager. Here, we add our API from an existing OpenAPI service by selecting our YAML file. We just confirm the info about the API. And keep the security settings. Great our API with Client ID is created!`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-export-bar1.png\",\n        \"alt\": \"10\"\n      }}></img>{` `}</p>\n    <h4>{`6.3 - Downloading OpenAPI Document`}</h4>\n    <p>{`Into the `}<em parentName=\"p\">{`Designer Dashboard`}</em>{` (1), click the `}<strong parentName=\"p\">{`menu`}</strong>{` (2) and click `}<strong parentName=\"p\">{`Export`}</strong>{` (3). Select `}<strong parentName=\"p\">{`Runtime flow asset (BAR)`}</strong>{` (4) and click `}<strong parentName=\"p\">{`Export`}</strong>{` (5).`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`To deploy the flow to an integration server, you must export it as a BAR file. All the configuration settings, other than the connection credentials for your accounts, are preserved in the exported archive. Let’s export an executable BAR file. From the dashboard, locate the flow, open its menu, and then click Export. When you export a flow, you can choose to export its configuration as a YAML or BAR file, or as an OpenAPI document. In our case, we export as a BAR File.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-develop-api1.png\",\n        \"alt\": \"10\"\n      }}></img><br parentName=\"p\"></br>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-develop-api2.png\",\n        \"alt\": \"10\"\n      }}></img><br parentName=\"p\"></br>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong><br />{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-develop-api3.png\",\n        \"alt\": \"10\"\n      }}></img><br parentName=\"p\"></br>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-develop-api4.png\",\n        \"alt\": \"10\"\n      }}></img><br parentName=\"p\"></br>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-develop-api5.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-develop-api6.png\",\n        \"alt\": \"10\"\n      }}></img><br parentName=\"p\"></br>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-develop-api7.png\",\n        \"alt\": \"10\"\n      }}></img><br parentName=\"p\"></br>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-develop-api8.png\",\n        \"alt\": \"10\"\n      }}></img><br parentName=\"p\"></br>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-develop-api9.png\",\n        \"alt\": \"10\"\n      }}></img><br parentName=\"p\"></br>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-develop-api10.png\",\n        \"alt\": \"10\"\n      }}></img>{`  `}</p>\n    <h4>{`6.4 - Testing an API`}</h4>\n    <p>{`Copy the `}<strong parentName=\"p\">{`POST URL`}</strong>{` (remove `}<em parentName=\"p\">{`/CarRepairClaim`}</em>{`) (1). Copy the `}<strong parentName=\"p\">{`X-IBM-Client-Id`}</strong>{` (2). In your script folder, on `}<em parentName=\"p\">{`terminal`}</em>{` window, `}<em parentName=\"p\">{`edit`}</em>{` the `}<strong parentName=\"p\">{`00-variables`}</strong>{` file and update the `}<strong parentName=\"p\">{`BASEPATH`}</strong>{` and `}<strong parentName=\"p\">{`CLIENTID`}</strong>{` (3). Execute source `}<strong parentName=\"p\">{`exportVariables.sh`}</strong>{` (4). Execute `}<strong parentName=\"p\">{`./demotestcar.sh`}</strong>{` (5). Check the `}<strong parentName=\"p\">{`new case`}</strong>{` in `}<em parentName=\"p\">{`Salesforce`}</em>{`. `}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`We can use this page to test the API, but we will need to include the JSON body. Let’s use the test script, that is ready. We just need to copy the new URL and the Client ID and update our script variables.\t`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-test-apic1.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-test-apic2.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-test-apic3.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-test-apic4.png\",\n        \"alt\": \"10\"\n      }}></img>{` `}</p>\n    <h4>{`6.5 - Publishing an API`}</h4>\n    <p>{`Open the `}<strong parentName=\"p\">{`Menu`}</strong>{` (1) and click `}<strong parentName=\"p\">{`Publish`}</strong>{` (2). Enter `}<strong parentName=\"p\">{`Car Repair APIs`}</strong>{` as `}<em parentName=\"p\">{`Product Title`}</em>{` (3). Select `}<strong parentName=\"p\">{`Catalog for Demo use (ddd-demo-test-catalog)`}</strong>{` and click `}<strong parentName=\"p\">{`Publish`}</strong>{` (4).`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`We will make the API available to developers. To do so, the API must be included into an API product and then published to the catalog. A product dictates rate limits and API throttling. `}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-publish-api1.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-publish-api2.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-publish-api3.png\",\n        \"alt\": \"10\"\n      }}></img><br parentName=\"p\"></br>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-publish-api4.png\",\n        \"alt\": \"10\"\n      }}></img>{` `}</p>\n    <h4>{`6.6 - Adding a Rate Limiting Plan`}</h4>\n    <p>{`Open the `}<strong parentName=\"p\">{`Products`}</strong>{` tab (1). Click on the `}<strong parentName=\"p\">{`Car Repair APIs`}</strong>{` product (2). Click on `}<strong parentName=\"p\">{`Plans`}</strong>{` (3). Click `}<strong parentName=\"p\">{`Add`}</strong>{` (4). Enter `}<strong parentName=\"p\">{`Gold Plan`}</strong>{` as `}<em parentName=\"p\">{`Title`}</em>{` (5). Change the `}<em parentName=\"p\">{`Rate Limits`}</em>{` to `}<strong parentName=\"p\">{`100 Calls Per 1 minute`}</strong>{` (6). Click `}<strong parentName=\"p\">{`Save`}</strong>{` (7). Open the `}<strong parentName=\"p\">{`Develop`}</strong>{` page (8). Back to the `}<strong parentName=\"p\">{`Products`}</strong>{` tab (9). Open the `}<strong parentName=\"p\">{`Menu`}</strong>{` and `}<strong parentName=\"p\">{`Publish`}</strong>{` the Product (10). Select the `}<em parentName=\"p\">{`Catalog for Demo use`}</em>{` (11). Click `}<strong parentName=\"p\">{`Publish`}</strong>{` (12). Open the `}<strong parentName=\"p\">{`Manage`}</strong>{` (13), open the `}<strong parentName=\"p\">{`Catalog for Demo use`}</strong>{` (14) and check the Products state and plans (15).`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`Security is applied to APIs. Rate limiting is applied to either APIs or API products. Let’s assign a rate limit for the API Product. We just need to open our new product. Rate Limiting is accomplished using plans. Let’s create a new Gold Plan with a specific Rate Limits. Great we have now two plans, the Gold and the default plan. We can have multiple plans for different consumers, for example we can add approval steps for consumers when they sign up or we can allocate them plans as a provider. Ok, now we need to republish our product. You’ll be prompted for a catalog to publish to. We only have one gateway installed so we don’t need to worry about that. Just Publish.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-rate-limit1.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-rate-limit2.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-rate-limit3.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-rate-limit4.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-rate-limit5.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-rate-limit6.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-rate-limit7.png\",\n        \"alt\": \"10\"\n      }}></img></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#place1\"\n      }}>{`Go to Top`}</a></p>\n    <summary>7 - Using the Portal</summary>\n    <h4>{`7.1 - Accessing the Portal`}</h4>\n    <p>{`Open the `}<strong parentName=\"p\">{`Catalog`}</strong>{` settings (1). Click `}<strong parentName=\"p\">{`Portal`}</strong>{` (2). Copy the `}<strong parentName=\"p\">{`Portal URL`}</strong>{` (3). Open a new Browser tab and access the `}<strong parentName=\"p\">{`Portal URL`}</strong>{`. If you don’t have a developer account click `}<strong parentName=\"p\">{`Create account`}</strong>{` to create it (4). As soon as you complete the registration (5), just `}<strong parentName=\"p\">{`Sign in`}</strong>{` (6).`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`Now that we’ve published our API, we need to make sure that our API consumers can discover it and use it. Our Portal allows potential API consumers to view the APIs, sign up and subscribe to plans in a self-service manner, test the APIs, download the OpenAPI - Swagger documents and more. Let’s get our portal URL and sign up as a Consumer of our API using Portal Self-Service.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-access-portal1.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-access-portal2.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-access-portal3.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-access-portal4.png\",\n        \"alt\": \"10\"\n      }}></img>{` `}</p>\n    <h4>{`7.2 - Creating a new App`}</h4>\n    <p>{`Click `}<strong parentName=\"p\">{`Create a new App`}</strong>{` (1). Enter `}<strong parentName=\"p\">{`Car Repair Application`}</strong>{` as `}<em parentName=\"p\">{`App Title`}</em>{` (2). Click `}<strong parentName=\"p\">{`Save`}</strong>{` (3). On the credentials dialog, click `}<strong parentName=\"p\">{`OK`}</strong>{` (4). On the `}<strong parentName=\"p\">{`Subscription`}</strong>{` tab, copy the Client ID (5).\t`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`As a Consumer/Developer, we’re going to create a new application in the Portal. This will give us an API key so we can call our APIs. We just need to give an Application Title and copy the API Key and Secret.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-new-app1.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-new-app2.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-new-app3.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-new-app4.png\",\n        \"alt\": \"10\"\n      }}></img>{` `}</p>\n    <h4>{`7.3 - Subscribing to an API`}</h4>\n    <p>{`Click `}<strong parentName=\"p\">{`Why not browser the available APIs?`}</strong>{` (1). Click `}<strong parentName=\"p\">{`Car Repair APIs 1.0.0`}</strong>{` (2). On `}<em parentName=\"p\">{`Gold Plan`}</em>{`, click `}<strong parentName=\"p\">{`Subscribe`}</strong>{` (3). Select the `}<strong parentName=\"p\">{`Car Repair Application`}</strong>{` (4). Confirm the Subscription by clicking `}<strong parentName=\"p\">{`Next`}</strong>{` (5). Click `}<strong parentName=\"p\">{`Done`}</strong>{` (6).`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`As a Consumer/Developer, we’re going to create a new application in the Portal. This will give us an API key so we can call our APIs. We just need to give an Application Title and copy the API Key and Secret.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-subscription1.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-subscription2.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-subscription3.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-subscription4.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-subscription5.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-subscription6.png\",\n        \"alt\": \"10\"\n      }}></img>{` `}</p>\n    <h4>{`7.4 - Testing the API`}</h4>\n    <p>{`Click on the `}<strong parentName=\"p\">{`Car_Insurance API`}</strong>{` itself (1). Copy the `}<strong parentName=\"p\">{`Endpoint`}</strong>{` (2). Open the `}<strong parentName=\"p\">{`POST /CarRepairClaim`}</strong>{` (3). Explore the `}<strong parentName=\"p\">{`Example request`}</strong>{` area (4). Open the `}<strong parentName=\"p\">{`Try it`}</strong>{` tab (5). Click `}<strong parentName=\"p\">{`Generate`}</strong>{` (6). Click `}<strong parentName=\"p\">{`Send`}</strong>{` (7). Explore the `}<strong parentName=\"p\">{`Response`}</strong>{` (8).`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`We’re now back at the product screen. Let’s explore our API here. From the Overview page, we can download the OpenAPI Document and get the API Endpoint. Note the portal has everything you need to call your API, it’s even generated clients in various languages for you to copy/paste into your calling application. You can try the API on the Try it area. Using the Generate button, the portal generates a request with random sample data for you. Now, let’s test it. Great, we got a response, our API is running, and we’ve gone through the gateway to access it.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-portal-test1.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-portal-test2.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-portal-test3.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-portal-test4.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-portal-test5.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-portal-test6.png\",\n        \"alt\": \"10\"\n      }}></img>{` `}</p>\n    <h4>{`7.5 - Viewing the API Statistics`}</h4>\n    <p>{`Click `}<strong parentName=\"p\">{`Apps`}</strong>{` on top menu (1). Click the `}<strong parentName=\"p\">{`Car Repair APIs`}</strong>{` (2). Explore the API stats (3).`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`We can see our API statistics in the Portal. We just need to select our APP, and here we can see all the API calls, including any possible errors. If you make more calls, you’ll see larger statistic results.`}</p>\n    <p><strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-statistics1.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-statistics2.png\",\n        \"alt\": \"10\"\n      }}></img>{`\n`}<strong parentName=\"p\">{`Screenshot`}</strong>{`\n`}<img parentName=\"p\" {...{\n        \"src\": \"./images/demoscript-statistics3.png\",\n        \"alt\": \"10\"\n      }}></img>{` `}</p>\n    <h2>{`Summary`}</h2>\n    <p>{`Show Demo Final Slides.`}</p>\n    <p><strong parentName=\"p\">{`Narration`}</strong></p>\n    <p>{`Now we can see that the metrics for Robot Shop have returned to normal: The call volume has increased again, erroneous call rate has decreased, and latency has decreased. `}</p>\n    <p>{`Let’s summarize what we’ve done today. In the demo we:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Accessed the Cloud Pak for Integration environment and explored the capabilities`}</li>\n      <li parentName=\"ul\">{`Imported and reviewed the automated customer interactions integration flow`}</li>\n      <li parentName=\"ul\">{`Tested the flow`}</li>\n      <li parentName=\"ul\">{`Deployed the flow into the Cloud Pak runtime environment`}</li>\n      <li parentName=\"ul\">{`Managed access to the flow as an API and set up the security and rate limits`}</li>\n      <li parentName=\"ul\">{`Demonstrated how a developer can use the API Portal to perform self-service consumption of the API`}</li>\n    </ul>\n    <p>{`From a business perspective we used APIs and application integrations to automate a series of steps to: obtain and validate input information from a customer with a concern, open a case in Salesforce, attach the incoming information to the case, analyze the tone of the situation, and respond to the customer with the case number and expected date for resolution.`}</p>\n    <p>{`The customer expressing a concern or needing assistance obtains rapid response to their interaction and the confidence that your business is handling their request.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"#place1\"\n      }}>{`Go to Top`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}